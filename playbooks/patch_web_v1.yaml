---

    - hosts: "tag_Environment_{{env}}:&tag_Role_Web"
      user: ubuntu
      serial: 1

      tasks:
      - name: gather ec2 facts
        action: ec2_facts

      - name: remove server out of the ELB
        local_action:
          module: ec2_elb
          instance_id: "{{ ansible_ec2_instance_id }}"
          region: "{{ ec2_region }}"
          state: absent

      - name: security patching
        become: true
        apt:
          upgrade: dist
          update_cache: yes

#      - name: debug variable
#        debug:
#          msg: "NFS MAIN IP: {{ hostvars[groups['tag_Role_NFS_Main'][1]]['ec2_private_ip_address']  }}"

      - name: remove NFS MAIN mount
        become: true
        mount: name=/data src="{{ hostvars[groups['tag_Role_NFS_Main'][0]]['ec2_private_ip_address'] }}:/data" fstype=nfs opts=defaults,nobootwait dump=0 passno=2 state=absent

      - name: add NFS Secondary mount
        become: true
        mount: name=/data src="{{ hostvars[groups['tag_Role_NFS_Secondary'][0]]['ec2_private_ip_address']  }}:/data" fstype=nfs opts=defaults,nobootwait dump=0 passno=2 state=mounted
#        when: ec2_tag_Role == 'Web' 

      - name: reboot the server
        become: true
        command: /sbin/shutdown -r now

      - name: wait for host to restart
        local_action:
          module: wait_for
          host: "{{ ansible_ec2_local_ipv4 }}"
          port: 22
          delay: 1
          timeout: 300

      - name: add servers back to the ELB
        local_action:
          module: ec2_elb
          instance_id: "{{ ansible_ec2_instance_id }}"
          region: "{{ ec2_region }}"
          ec2_elbs: "{{ elb_name }}"
          state: present
