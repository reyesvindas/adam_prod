---

- hosts: localhost
  user: ubuntu
  tasks:

    - name: Create the ELB only listening over port 80
      ec2_elb_lb:
        name: "test-load-balancer"
        state: present
        region: us-east-1
        subnets: 'subnet-25aa750e,subnet-f0b9c7ca,subnet-f59a2cac'
        security_group_ids:
          - sg-6a95310e
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: elb

    - name: Create EC2 instances
      ec2:
        key_name: Microsites_East
        instance_type: t2.nano
        image: ami-43a15f3e
        region: us-east-1
        vpc_subnet_id: subnet-25aa750e
        assign_public_ip: yes  
        group_id:
          - sg-db9430bf
          - sg-4995312d
        wait: yes
        instance_tags:
          Role: Web
          Environment: test
        exact_count: 2
        count_tag:
          Role: Web
          Environment: test
      register: ec2_instances

    - name: Store EC2 instance IPs to provision against
      add_host:
        hostname: "{{ item.private_ip }}"
        groupname: ec2_instance_ips
      with_items: "{{ ec2_instances.tagged_instances }}"

    - name: Wait for servers to come online
      wait_for:
        host: "{{ item.private_ip }}"
        port: 22
        timeout: 180
      with_items: "{{ ec2_instances.tagged_instances }}"

- hosts: ec2_instance_ips
  gather_facts: False
  user: ubuntu
  become: true
  tasks:
    - name: Install Python
      raw: bash -c "test -e /usr/bin/python || (apt -qqy update && apt install -qy python-minimal)"
      retries: 3
      delay: 5
      register: result
      until: result.rc == 0

- hosts: localhost
  tasks:
    - name: Add each EC2 instance to the ELB
      ec2_elb:
        state: present
        ec2_elbs: "test-load-balancer"
        region: us-east-1
        instance_id: "{{ item.id }}"
      with_items: "{{ ec2_instances.tagged_instances }}"


